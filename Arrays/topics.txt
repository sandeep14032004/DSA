1. Basics of Arrays

Declaring, initializing, and accessing arrays.___//
Types of arrays: 1D, 2D, and multi-dimensional arrays.____///
Array manipulation: inserting, deleting, and updating elements.___//
Traversing arrays using loops.____///

2. Array Operations
Finding the maximum and minimum element._____////
Calculating the sum and average of elements._____///
Reversing an array.___///
Rotating an array (left or right rotation).
Searching for an element in an array (linear search, binary search).

3. Sorting Algorithms
Bubble Sort
Selection Sort
Insertion Sort
Merge Sort
Quick Sort
Counting Sort
Radix Sort

4. Two-pointer Technique
Pair with a given sum.
Finding triplets with zero sum.
Moving zeroes to the end.
Merging two sorted arrays.
Removing duplicates from a sorted array.

5. Sliding Window Technique
Maximum sum subarray of size k.
Smallest subarray with a given sum.
Longest subarray with a sum less than or equal to k.

6. Kadaneâ€™s Algorithm
Maximum sum subarray problem (continuous subarray).

7. Matrix Problems
Matrix rotation (90 degrees, 180 degrees).
Spiral traversal of a matrix.
Searching in a sorted matrix.
Transpose of a matrix.

8. Prefix Sum and Difference Array
Prefix sum array for range queries.
Difference array for range updates.
Finding equilibrium index.

9. Advanced Array Problems
Next greater element in an array.
Trapping Rain Water problem.
Maximum product subarray.
Subarray with a given sum (non-negative and mixed arrays).
Longest increasing subsequence.
Majority element (element appearing more than n/2 times).
Stock buy and sell problem (multiple transactions).
Rearranging array elements alternatively (max/min order).

10. Hashing with Arrays
Count distinct elements in an array.
Longest subarray with sum k.
Check if two arrays are equal.
Intersection and union of two arrays.

11. Dynamic Programming with Arrays
Longest increasing subsequence (LIS).
Maximum sum increasing subsequence.
Longest common subsequence (LCS).
Subset sum problem.